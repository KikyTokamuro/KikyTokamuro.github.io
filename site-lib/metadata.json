{"createdTime":1734438312318,"shownInTree":["journal/2024/12/2024-12-18.html","journal/2025/02/2025-02-20.html","notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html","notes/2019-10-06-перепрошивка-nokia-n900.html","notes/2019-10-06-созданиe-initramfs.html","notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html","notes/2020-06-20-golang-заметки-логирование.html","notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html","notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html","notes/2022-02-16-lisp-alien.html","notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html","notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html","curriculum-vitae.html","index.html"],"attachments":["site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/874d8b8e340f75575caa.svg","site-lib/media/3d6c1bdc4d87cde4de67.svg","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/media/favicon.ico","site-lib/styles/snippets.css","site-lib/styles/obsidian.css","site-lib/styles/global-variable-styles.css","site-lib/styles/main-styles.css","attachments/pasted-image-20241217143050.png","attachments/pasted-image-20241217142636.png","attachments/rein_mandelbrot.gif","attachments/pasted-image-20241217132114.png","attachments/process.gif","attachments/pasted-image-20241217132156.png","attachments/pasted-image-20241217132218.png","attachments/pasted-image-20241217125240.png","attachments/pasted-image-20241217125302.png","attachments/pasted-image-20241217125331.png","attachments/pasted-image-20241217124638.png","attachments/pasted-image-20241217131719.png","attachments/pasted-image-20241217122828.png","site-lib/rss.xml","attachments/pasted-image-20250220152742.png"],"allFiles":["journal/2025/02/2025-02-20.html","attachments/pasted-image-20250220152742.png","journal/2024/12/2024-12-18.html","notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html","curriculum-vitae.html","site-lib/media/favicon.ico","notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html","notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html","notes/2022-02-16-lisp-alien.html","notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html","notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html","notes/2019-10-06-перепрошивка-nokia-n900.html","notes/2019-10-06-созданиe-initramfs.html","notes/2020-06-20-golang-заметки-логирование.html","notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html","index.html","site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/874d8b8e340f75575caa.svg","site-lib/media/3d6c1bdc4d87cde4de67.svg","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/styles/snippets.css","site-lib/styles/obsidian.css","site-lib/styles/global-variable-styles.css","site-lib/styles/main-styles.css"],"webpages":{"notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html":{"title":"2019-09-08 Использования Proxmark3 для клонирования пропуска через турникет","icon":"","description":"<a href=\".?query=tag:proxmark3\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#proxmark3\">#proxmark3</a> <a href=\".?query=tag:rfid\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#rfid\">#rfid</a> <a href=\".?query=tag:linux\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#linux\">#linux</a> <a href=\".?query=tag:device\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#device\">#device</a>Пришла моя заветная посылка с “Proxmark3 Easy”. Если вкратце, то Proxmark3 — это мощный RFID инструмент, предназначенный для отслеживания, прослушивания и эмуляции всего, от низкочастотных (125 кГц) до высокочастотных (13,56 МГц) меток.<br><img alt=\"Pasted image 20241217122828.png\" src=\"attachments/pasted-image-20241217122828.png\" target=\"_self\">Перед тем как вы продолжите читать, спешу вас предупредить: Данная статья написана только для ознакомления, и ни в коем случае не призывает заниматься подделкой RFID меток, так как это противоречит УК РФ. Автор не несет ответственности за любые неправомерные действия, совершенные людьми с использованием информации из данной статьи.<br>Данная статья предполагает, что вы уже установили нужную прошивку на ваш Proxmark3 и умеете запускать утилиту для работы с ним, если нет то переходим <a data-tooltip-position=\"top\" aria-label=\"https://github.com/Proxmark/proxmark3\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/Proxmark/proxmark3\" target=\"_self\">сюда</a> и читаем.Ну что, приступим к исследованию RFID меток.<br>В моем учебном учреждении при входе стоят турникеты, и для того, чтобы пройти нужно приложить свой пропуск. И так как я часто забывал пропуск, я решил скопировать его на брелок T5577, который шел в комплекте к Proxmark3. Подобные брелоки можно найти на <a data-tooltip-position=\"top\" aria-label=\"https://aliexpress.ru/wholesale?SearchText=t5577\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aliexpress.ru/wholesale?SearchText=t5577\" target=\"_self\">AliExpress</a>.С начало нужно узнать, что за тип метки используется в пропуске, для этого прикладываем его к считывателю и запускаем утилиту proxmark3:./proxmark3 /dev/ttyACM0\nКак утилита запуститься вводим:proxmark3&gt; lf search\nПосле того как произойдет обнаружение пропуска, можно увидеть подобный текст:Checking for known tags:\nEM410x pattern found:\nEM TAG ID : 1234567890\n...\nВ данном случае, мой пропуск оказался меткой типа EM410x с ID 1234567890 (понадобиться для копирования). EM410x — это формат RFID меток компании EM Microelectronic-Marin. Данная метка относиться к классу пассивных RFID меток, поскольку не имеет встроенного источника питания. Работает в частотном диапазоне 125 КГц.Далее, запоминаем ID метки, и прикладываем к считывателю брелок, на который будем клонировать пропуск. И вводим команду:proxmark3&gt; lf em 410xwrite 1234567890 1\nПосле этого можно увидеть:Writing T55x7 tag with UID 0x1234567890 (clock rate: 64)\n#db# Started writing T55x7 tag ...\n#db# Clock rate: 64\nЭто говорит нам о том, что метка успешно скопировалась. Можно смело идти на учебу и проверять, заранее скажу что все отлично сработало ;)Ссылки на тему исследования RFID меток:\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://habr.com/ru/post/325776/\" target=\"_self\">https://habr.com/ru/post/325776/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.securitylab.ru/analytics/458814.php\" target=\"_self\">https://www.securitylab.ru/analytics/458814.php</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:proxmark3","?query=tag:rfid","?query=tag:linux","?query=tag:device"],"author":"","coverImageURL":"","fullURL":"notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html","pathToRoot":"..","attachments":["attachments/pasted-image-20241217122828.png"],"createdTime":1734438024857,"modifiedTime":1734444816042,"sourceSize":4072,"sourcePath":"Notes/2019-09-08 Использования Proxmark3 для клонирования пропуска через турникет.md","exportPath":"notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2019-10-06-перепрошивка-nokia-n900.html":{"title":"2019-10-06 Перепрошивка Nokia N900","icon":"","description":"<a href=\".?query=tag:nokia\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#nokia\">#nokia</a> <a href=\".?query=tag:linux\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#linux\">#linux</a> <a href=\".?query=tag:device\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#device\">#device</a> <br><img alt=\"Pasted image 20241217124638.png\" src=\"attachments/pasted-image-20241217124638.png\" target=\"_self\">Предупреждение: автор не несет ответственности за причиненные повреждения вашему аппарату в процессе следования данным инструкциям. Вы все делаете на свой страх и риск.<br>Не так давно мне в руки попал знаменитый Nokia n900, я с ним всячески разбирался. Да так разбирался, что слетело ядро, и девайс впал в bootloop. Раз сломал, нужно чинить. Были найдены нужные&nbsp;<a data-tooltip-position=\"top\" aria-label=\"http://talk.maemo.org/showpost.php?p=1418219&amp;postcount=13\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://talk.maemo.org/showpost.php?p=1418219&amp;postcount=13\" target=\"_self\">файлы</a>, и&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://wiki.maemo.org/User:Agge/Updating_the_firmware/rev2\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wiki.maemo.org/User:Agge/Updating_the_firmware/rev2\" target=\"_self\">мануал</a>&nbsp;по прошивке данного телефона.Если вкратце, то для прошивки n900, нужно 3 вещи:\nОбраз FIASCO aka COMBINED — в него входит rootfs, kernel, и прошивка GSM модуля (если верить вики).\nОбраз eMMC aka VANILLA — нужен для очистки пользовательского раздела /home (прошивку данного образа мы рассматривать не будем, так как мне это было просто не нужно. Но он прошивается почти так же как и первый).\nФлешер, он же flasher-3.5 — софт с помощью которого и будем прошивать.\n<br>Образы берем от&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://talk.maemo.org/showpost.php?p=1418219&amp;postcount=13\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://talk.maemo.org/showpost.php?p=1418219&amp;postcount=13\" target=\"_self\">сюда</a>, а флешер можно найти&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://soft.sibnet.ru/soft/22060-maemo-flasher-3-5/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://soft.sibnet.ru/soft/22060-maemo-flasher-3-5/\" target=\"_self\">тут</a>. Я флешер ставил из&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://aur.archlinux.org/packages/flasher/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aur.archlinux.org/packages/flasher/\" target=\"_self\">AUR</a>, так как от туда еще и подтянулась нужная библиотека:yaourt flasher\nПриступим к прошивке:\nПереходим в директорию с образом прошивки, и выполняем команду (имя образа у вас может быть другим):sudo flasher-3.5 -F RX-51_2009SE_20.2010.36-2.003_PR_COMBINED_003_ARM.bin -f -R\nДолжно появится что-то на подобии:...\nSuitable USB device not found, waiting\nВыключаем N900, зажимаем клавишу “u” на клавиатуре девайса, и только потом подключаем USB шнур. Если вы все правильно сделали, то на экране телефона появится значок USB, а на компьютере в терминале побегут строки с информацией о перепрошивке. После этих действий телефон должен перезагрузиться, и начать работать с новой прошивкой.Но не тут то было, у меня после выполнения этих действий, в терминале выбило ошибку (не все могут с ней столкнуться, у некоторых все отлично шьется):Error claiming USB interface: Device or resource busy...\nSuitable USB device not found, waiting\nРешается она удалением модуля ядра:sudo modprobe -r cdc_phonet\n<br>Вы так же можете столкнуться с другими ошибками, с их решением можно ознакомиться&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://wiki.maemo.org/User:Agge/Updating_the_firmware/rev2/Trubleshooting\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wiki.maemo.org/User:Agge/Updating_the_firmware/rev2/Trubleshooting\" target=\"_self\">тут</a>.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:nokia","?query=tag:linux","?query=tag:device"],"author":"","coverImageURL":"","fullURL":"notes/2019-10-06-перепрошивка-nokia-n900.html","pathToRoot":"..","attachments":["attachments/pasted-image-20241217124638.png"],"createdTime":1734438024857,"modifiedTime":1734430757767,"sourceSize":3811,"sourcePath":"Notes/2019-10-06 Перепрошивка Nokia N900.md","exportPath":"notes/2019-10-06-перепрошивка-nokia-n900.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2019-10-06-созданиe-initramfs.html":{"title":"2019-10-06 Созданиe initramfs","icon":"","description":"<a href=\".?query=tag:linux\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#linux\">#linux</a> <a href=\".?query=tag:kernel\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#kernel\">#kernel</a>Initramfs, сокращенно от “initial RAM file system”, является приемником initrd (initial ramdisk). Это cpio (copy in and out) архив исходной файловой системы, который загружается в память во время процесса запуска Linux. Linux копирует содержимое архива в rootfs (которая может быть основана на ramfs либо на tmpfs), а затем запускает init. Init предназначен для выполнения определенных задач до того, как реальная или финальная файловая система будет установлена поверх rootfs. Таким образом, initramfs должен содержать все драйвера устройств и инструменты, необходимые для установки конечной корневой файловой системы.Скачиваем busybox (вы можете скачать более новую версию):wget https://busybox.net/downloads/busybox-1.26.2.tar.bz2\ntar -xvf busybox-1.26.2.tar.bz2\nСобираем busybox из исходников:cd busybox-1.26.2\nmake defconfig\nmake menuconfig\nВ меню Busybox Settings выбираем Build Options, и ставим галочку напротив Build BusyBox as a static binary (no shared libs). Далее указываем выходную папку для бинарников и собираем busybox.make\nmake CONFIG_PREFIX=./../busybox_rootfs install\nСоздаем иерархию каталогов для initramfs:mkdir -p initramfs/{bin,dev,etc,home,mnt,proc,sys,usr}\ncd initramfs/dev\nsudo mknod sda b 8 0\nsudo mknod console c 5 1\nТак же копируем все из папки busybox_rootfs в папку initramfs. Дальше создаем в корне initramfs файл init, и пишем в него следующее:#!/bin/sh\nmount -t proc none /proc\nmount -t sysfs none /sys\nexec /bin/sh\nИ даем ему права на исполнение:chmod +x init\nСоздаем сам initramfs:find . -print0 | cpio --null -ov --format=newc &gt; initramfs.cpio\ngzip ./initramfs.cpio\nСкачиваем и собираем ядро (вы можете скачать более новую версию):wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.11.6.tar.xz\ntar -xvf linux-4.11.6.tar.xz\nmake x86_64_defconfig\nmake kvmconfig\nmake -j2\nОбраз ядра будет лежать в /arch/x86_64/boot/bzImage.Дальше копируем куда-то наш initramfs и ядро, заходим в эту директорию и запускаем qemu:qemu-system-x86_64 -kernel ./bzImage -initrd ./initramfs.cpio.gz -nographic -append \"console=ttyS0\"\nЕсли все было выполнено правильно, то загрузится ядро и запустится shell.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:linux","?query=tag:kernel"],"author":"","coverImageURL":"","fullURL":"notes/2019-10-06-созданиe-initramfs.html","pathToRoot":"..","attachments":[],"createdTime":1734438024873,"modifiedTime":1734430749469,"sourceSize":3155,"sourcePath":"Notes/2019-10-06 Созданиe initramfs.md","exportPath":"notes/2019-10-06-созданиe-initramfs.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html":{"title":"2019-10-13 Raspberry Pi + Nokia 5110 LCD = ❤","icon":"","description":"<a href=\".?query=tag:linux\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#linux\">#linux</a> <a href=\".?query=tag:device\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#device\">#device</a><br><img alt=\"Pasted image 20241217125240.png\" src=\"attachments/pasted-image-20241217125240.png\" target=\"_self\">Nokia 5110 LCD — это монохромный дисплей 84x48 пикселей, который использовался в старых телефонах Nokia. Основное преимущество этого дисплея — легкость в управлении.На плате модуля дисплея расположены два параллельных ряда по 8 пинов для подключения и передачи данных:\nRST — Перезагрузка.\nCE — Выбор чипа.\nDC — Выбор режима.\nDIN — Вход данных.\nCLK — Вход тактового сигнала.\nVCC — Питание.\nLIGHT — Питание подсветки дисплея.\nGND — Земля.\n<br><img alt=\"Pasted image 20241217125302.png\" src=\"attachments/pasted-image-20241217125302.png\" target=\"_self\">Подключение данного дисплея к Raspberry Pi осуществляется очень просто, вот по этой схеме (чтобы при подключении дисплея работала его подсветка, нужно пин LIGHT подключить на землю):<br><img alt=\"Pasted image 20241217125331.png\" src=\"attachments/pasted-image-20241217125331.png\" target=\"_self\">Дальше для взаимодействия с дисплеем на Raspberry Pi нужно установить нужные библиотеки (предполагается что такие вещи как git, python-pip, python-dev, build-essential у вас уже установлены, если нет, то их тоже нужно установить):sudo apt install python-imaging\npip install RPi.GPIO\nТак как взаимодействие с модулем экрана осуществляется по SPI, его так же нужно включить на Raspberry Pi. Для этого открываем файл “/boot/config.txt” и раскомментируем в нем строку:dtparam=spi=on\nПосле этого сохраняем файл и перезагружаемся командой:sudo reboot\nЧтобы проверить что SPI включено, можно воспользоваться командой:lsmod | grep \"spi_bcm*\"\nДальше скачиваем и устанавливаем библиотеку для взаимодействия с дисплеем Nokia 5110:git clone https://github.com/adafruit/Adafruit_Nokia_LCD\ncd Adafruit_Nokia_LCD\nsudo python setup.py install\nЧтобы проверить то что дисплей правильно подключен и все работает, можно запустить один из примеров, из папки “Adafruit_Nokia_LCD/examples/”.А теперь попробуем написать простенькие часы для этого дисплея:#!/usr/bin/python import time\nfrom datetime import datetime import Adafruit_Nokia_LCD as LCD\nimport Adafruit_GPIO.SPI as SPI from PIL import Image\nfrom PIL import ImageDraw\nfrom PIL import ImageFont # Raspberry Pi hardware SPI config:\nDC = 23\nRST = 24\nSPI_PORT = 0\nSPI_DEVICE = 0 # Hardware SPI usage:\ndisp = LCD.PCD8544(DC, RST, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=4000000)) # Software SPI usage (defaults to bit-bang SPI interface):\n#disp = LCD.PCD8544(DC, RST, SCLK, DIN, CS) # Initialize library.\ndisp.begin(contrast=40) # Clear display.\ndisp.clear()\ndisp.display() # Create blank image for drawing.\n# Make sure to create image with mode '1' for 1-bit color.\nimage = Image.new('1', (LCD.LCDWIDTH, LCD.LCDHEIGHT)) # Get drawing object to draw on image.\ndraw = ImageDraw.Draw(image) print('Press Ctrl-C to quit.') while True: # Get current time strt = datetime.now().strftime('%H:%M:%S') # Draw a white filled box to clear the image. draw.rectangle((0,0,LCD.LCDWIDTH,LCD.LCDHEIGHT), outline=255, fill=255) # Alternatively load a TTF font. # Some nice fonts to try: http://www.dafont.com/bitmap.php font = ImageFont.truetype('game_over.ttf', 58) # Write some text. draw.text((0,0), strt, font=font) # Display image. disp.image(image) disp.display() time.sleep(1.0)\nЗапускается этот код командой:sudo python clock.py\nДемонстрация работы получившихся часов:","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:linux","?query=tag:device"],"author":"","coverImageURL":"","fullURL":"notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html","pathToRoot":"..","attachments":["attachments/pasted-image-20241217125240.png","attachments/pasted-image-20241217125302.png","attachments/pasted-image-20241217125331.png"],"createdTime":1734438024873,"modifiedTime":1734431127073,"sourceSize":4708,"sourcePath":"Notes/2019-10-13 Raspberry Pi + Nokia 5110 LCD = ❤.md","exportPath":"notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2020-06-20-golang-заметки-логирование.html":{"title":"2020-06-20 Golang заметки - Логирование","icon":"","description":"<a href=\".?query=tag:golang\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#golang\">#golang</a> <a href=\".?query=tag:dev\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#dev\">#dev</a> Простейшее использование пакета log. Сообщения пишутся в&nbsp;os.Stderr:package main import ( \"log\"\n) func main() { log.Println(\"Test message\") log.Fatal(\"Fatal message\") // будет выход с кодом ошибки\n}\nЖурналирование с использование&nbsp;log.Logger, он поддерживает функции передачи данных любому объекту io.Writer, способен работать с файлами и сетевыми подключениями:package main import ( \"log\" \"os\"\n) func main() { logfile, _ := os.Create(\"./test.log\") defer logfile.Close() logger := log.New(logfile, \"Prefix \", log.LstdFlags|log.Llongfile) logger.Println(\"Test message\") logger.Fataln(\"Fatal message\")\n}\n<br><img alt=\"Pasted image 20241217131719.png\" src=\"attachments/pasted-image-20241217131719.png\" target=\"_self\">Пример простого журналирования с записью в сетевой сокет:package main import ( \"log\" \"net\"\n) func main() { conn, err := net.Dial(\"tcp\", \"localhost:8080\") if err != nil { panic(\"Failed to connect to localhost:8080\") } defer conn.Close() logger := log.New(conn, \"log: \", log.LstdFlags|log.Llongfile) logger.Println(\"Test log message\")\n}\nЗапись сообщений в системный журнал, с помощью&nbsp;log/syslog:package main import ( \"fmt\" \"log\" \"log/syslog\"\n) func main() { priority := syslog.LOG_LOCAL3 | syslog.LOG_NOTICE flags := log.Ldate | log.Lshortfile logger, err := syslog.NewLogger(priority, flags) if err != nil { fmt.Printf(\"Can't attach to syslog: %s\", err) return } logger.Println(\"This is a test log message.\")\n} // июн 19 00:55:52 kiky-aspire /tmp/go-build002934745/b001/exe/main[12988]: 2020/06/19 main.go:17: This is a test log message.\nДинамическое определение вида и уровня серьезности, при записи в системный журнал:package main import ( \"log/syslog\"\n) func main() { logger, err := syslog.New(syslog.LOG_LOCAL3, \"kiky\") if err != nil { panic(\"Cannot attach to syslog\") } defer logger.Close() logger.Debug(\"Debug message.\") logger.Notice(\"Notice message.\") logger.Warning(\"Warning message.\") logger.Alert(\"Alert message.\")\n}\nВывод трассировки стека в поток стандратного вывода:package main import \"runtime/debug\" func foo() { bar()\n} func bar() { debug.PrintStack()\n} func main() { foo()\n} // Результат:\n/*\n[kiky@kiky-aspire main]$ go run main.go\ngoroutine 1 [running]:\nruntime/debug.Stack(0xc000034778, 0xc00006af78, 0x40461f)\n/usr/lib/go/src/runtime/debug/stack.go:24 +0x9d\nruntime/debug.PrintStack()\n/usr/lib/go/src/runtime/debug/stack.go:16 +0x22\nmain.bar(...)\n/home/kiky/go/src/main/main.go:10\nmain.foo(...)\n/home/kiky/go/src/main/main.go:6\nmain.main()\n/home/kiky/go/src/main/main.go:14 +0x21\n*/\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:golang","?query=tag:dev"],"author":"","coverImageURL":"","fullURL":"notes/2020-06-20-golang-заметки-логирование.html","pathToRoot":"..","attachments":["attachments/pasted-image-20241217131719.png"],"createdTime":1734438024873,"modifiedTime":1734430715102,"sourceSize":3019,"sourcePath":"Notes/2020-06-20 Golang заметки - Логирование.md","exportPath":"notes/2020-06-20-golang-заметки-логирование.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html":{"title":"2020-08-03 Golang заметки - Кросс-платформенная компиляция","icon":"","description":"<a href=\".?query=tag:golang\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#golang\">#golang</a> <a href=\".?query=tag:dev\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#dev\">#dev</a> Очень часто бывает так, что приложение разрабатывается в одной ОС, а эксплуатироваться должно в другой, данную проблему решает кросс-платформенная компиляция.Начиная с версии 1.5 компилятор языка Go начал поддерживать кросс-платформенную компиляцию из коробки. Для этого необходимо в переменных окружения GOARCH и GOOS указать целевую архитектуру и ОС.Допустимыми комбинациями&nbsp;GOOS&nbsp;и&nbsp;GOARCH&nbsp;являются:Пример использования:package main import \"fmt\" func main() { fmt.Println(\"Hello World\")\n}\nСобираем под Windows с 386 архитектурой:GOOS=windows GOARCH=386 go build main.go\nПроверяем правильно ли собралось:$ file main.exe\nmain.exe: PE32 executable (console) Intel 80386 (stripped to external PDB), for MS Windows\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:golang","?query=tag:dev"],"author":"","coverImageURL":"","fullURL":"notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html","pathToRoot":"..","attachments":[],"createdTime":1734438024873,"modifiedTime":1734430705118,"sourceSize":1821,"sourcePath":"Notes/2020-08-03 Golang заметки - Кросс-платформенная компиляция.md","exportPath":"notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html":{"title":"2020-08-07 Golang заметки - Работа с HTML шаблонами","icon":"","description":"<a href=\".?query=tag:golang\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#golang\">#golang</a> <a href=\".?query=tag:dev\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#dev\">#dev</a> Пакеты&nbsp;html&nbsp;и&nbsp;html/template&nbsp;из стандартной библиотеки обеспечивают основные возможности работы с HTML разметкой, включая применение переменных и функций в шаблонах. Пакет&nbsp;html/template&nbsp;опирается на пакет&nbsp;text/template, предназначенный для обработки текстовых шаблонов.package main import ( \"html/template\" \"net/http\"\n) var tmpl = `\n&lt;h1&gt;\n&lt;a href=\"{{.Link}}\"&gt;{{.Text}}&lt;/a&gt;\n&lt;/h1&gt;` type page struct { Text string Link string\n} func indexHandle(w http.ResponseWriter, r *http.Request) { t, _ := template.New(\"page\").Parse(tmpl) p := page{ Text: \"github\", Link: \"https://github.com/\", } t.Execute(w, p)\n} func main() { http.HandleFunc(\"/\", indexHandle) http.ListenAndServe(\":3000\", nil)\n}\nМеханизм конвейера передает вывод одного элемента конвейера следующему в последнем аргументе.package main import ( \"html/template\" \"net/http\"\n) var header = `\n{{define \"header\"}}\n&lt;h1&gt;Header&lt;/h1&gt;\n&lt;hr&gt;\n{{end}}` var tmpl = `\n{{template \"header\" .}}\n&lt;h1&gt;\n&lt;a href=\"{{.Link}}\"&gt;{{.Text}}&lt;/a&gt;\n&lt;/h1&gt;` type page struct { Text string Link string\n} func indexHandle(w http.ResponseWriter, r *http.Request) { t, _ := template.New(\"page\").Parse(header) t.Parse(tmpl) p := page{ Text: \"github\", Link: \"https://github.com/\", } t.Execute(w, p)\n} func main() { http.HandleFunc(\"/\", indexHandle) http.ListenAndServe(\":3000\", nil)\n}\nКогда шаблоны хранятся в файлах, их можно считывать такой конструкцией:template.Must(template.ParseFiles(\"index.html\", \"header.html\"))\npackage main import ( \"html/template\" \"net/http\"\n) type page struct { Text string Link string\n} func indexHandle(w http.ResponseWriter, r *http.Request) { t := template.Must(template.ParseFiles(\"index.html\", \"header.html\")) p := page{ Text: \"github\", Link: \"https://github.com/\", } t.ExecuteTemplate(w, \"index.html\", p)\n} func main() { http.HandleFunc(\"/\", indexHandle) http.ListenAndServe(\":3000\", nil)\n}\nДля обработки шаблона используется метод&nbsp;ExecuteTemplate, чтобы можно было указать имя основного шаблона. Если вызвать метод&nbsp;Execute, как в предыдущих примерах, он обработал бы первый шаблон из перечисленных в вызове функции&nbsp;ParseFiles.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Использование простого HTML шаблона","level":4,"id":"Использование_простого_HTML_шаблона_0"},{"heading":"Добавление функций для шаблонов","level":4,"id":"Добавление_функций_для_шаблонов_0"},{"heading":"Подгрузка шаблонов из файлов","level":4,"id":"Подгрузка_шаблонов_из_файлов_0"}],"links":["?query=tag:golang","?query=tag:dev"],"author":"","coverImageURL":"","fullURL":"notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html","pathToRoot":"..","attachments":[],"createdTime":1734438024888,"modifiedTime":1734430826869,"sourceSize":2924,"sourcePath":"Notes/2020-08-07 Golang заметки - Работа с HTML шаблонами.md","exportPath":"notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2022-02-16-lisp-alien.html":{"title":"2022-02-16 Lisp Alien","icon":"","description":"<a href=\".?query=tag:lisp\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#lisp\">#lisp</a> <a href=\".?query=tag:dev\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#dev\">#dev</a> <a href=\".?query=tag:art\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#art\">#art</a>You must have JavaScript enabled to display the content in this note correctly<br>Once upon a time I stumbled upon a&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://www.lisperati.com/#!The_Official_Lisp_Alien_3D_Model\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.lisperati.com/#!The_Official_Lisp_Alien_3D_Model\" target=\"_self\">Lisp Alien 3D Model</a>, I thought I wanted the same one, but more elaborate and with more detail accuracy.As time went on, the idea also remained somewhere in the depths of memory.<br>And recently,&nbsp;<a data-tooltip-position=\"top\" aria-label=\"mailto:stanislove1199@gmail.com\" rel=\"noopener nofollow\" class=\"external-link\" href=\".html\" target=\"_self\">my friend</a>&nbsp;told me that he began to get involved in 3D modeling. I thought this was my chance to bring my old idea to life. We consulted with him a bit, discussed the details, as well as how the final model should look, and he agreed to take on this project.During the implementation of the project, it was very interesting to watch how the model develops, new details appear in it, a soul appears. From the very beginning, we wanted to make only an alien, and it will stop there.But then we decided to add various new details to it:\nthe pedestal on which he will stand\nflag\nsword and shield\nbrain model inside an alien… don’t ask why…\nretro computer\nIt turned out funny with the computer model, we took the old Macintosh as a basis, and slightly changed its name to Nushtosh (Russian speakers will appreciate the joke):<br><img alt=\"Pasted image 20241217132114.png\" src=\"attachments/pasted-image-20241217132114.png\" target=\"_self\">A small cut of the moments of creation can be seen in this animation:<br><img alt=\"process.gif\" src=\"attachments/process.gif\" target=\"_self\">It was a very interesting and fun project, the result of which we were pleased with.Lisp Alien 3D model (you can twist and see): The pedestal 3D model (you can twist and see): Ready-made renders that can be put on the desktop wallpaper:<br><img alt=\"Pasted image 20241217132156.png\" src=\"attachments/pasted-image-20241217132156.png\" target=\"_self\"><br><img alt=\"Pasted image 20241217132218.png\" src=\"attachments/pasted-image-20241217132218.png\" target=\"_self\"><br>All files from this note can be found&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://github.com/KikyTokamuro/KikyTokamuro.github.io/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/KikyTokamuro/KikyTokamuro.github.io/\" target=\"_self\">here</a>.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:lisp","?query=tag:dev","?query=tag:art",".html"],"author":"","coverImageURL":"","fullURL":"notes/2022-02-16-lisp-alien.html","pathToRoot":"..","attachments":["attachments/pasted-image-20241217132114.png","attachments/process.gif","attachments/pasted-image-20241217132156.png","attachments/pasted-image-20241217132218.png"],"createdTime":1734438024888,"modifiedTime":1734434697459,"sourceSize":2546,"sourcePath":"Notes/2022-02-16 Lisp Alien.md","exportPath":"notes/2022-02-16-lisp-alien.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html":{"title":"2023-01-06 Рисуем Множество Мандельброта на Rein","icon":"","description":"<a href=\".?query=tag:dev\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#dev\">#dev</a> <a href=\".?query=tag:lua\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#lua\">#lua</a> <a href=\".?query=tag:art\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#art\">#art</a> Нравятся мне различные минималистичные проекты, они кажутся мне очень уютными и душевными.<br><a data-tooltip-position=\"top\" aria-label=\"https://github.com/hugeping/rein\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/hugeping/rein\" target=\"_self\">Rein</a>&nbsp;как раз является одним из таких уютных проектов, позиционирует он себя как минималистичный движок для 2D-игр и демок. Кстати, автор Rein так же является автором довольно известного&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://instead.hugeping.ru/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instead.hugeping.ru/\" target=\"_self\">интерпретатора текстографических приключений Instead</a>.На момент написания данной заметки у Rein всего две зависимости: SDL2 и luajit. На моем стареньком синкпаде он собирается очень быстро:$ git clone https://github.com/hugeping/rein; cd rein\n$ time make\ncc -c src/platform.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/platform.o\ncc -c src/stb_image.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/stb_image.o\ncc -c src/lua-compat.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/lua-compat.o\ncc -c src/stb_image_resize.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/stb_image_resize.o\ncc -c src/bit.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/bit.o\ncc -c src/utf.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/utf.o\ncc -c src/thread.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/thread.o\ncc -c src/main.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/main.o\ncc -c src/gfx.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/gfx.o\ncc -c src/stb_truetype.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/stb_truetype.o\ncc -c src/system.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/system.o\ncc -c src/gfx_font.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/gfx_font.o\ncc -c src/net.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/net.o\ncc -c src/zvon.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/zvon.o\ncc -c src/zvon_mixer.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/zvon_mixer.o\ncc -c src/zvon_sfx.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/zvon_sfx.o\ncc -c src/synth.c -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" -o src/synth.o\ncc -I/usr/include/SDL2 -D_REENTRANT -I/usr/include/luajit-2.1 -Wall -O3 -DVERSION=\\\"230106\\\" src/platform.o src/stb_image.o src/lua-compat.o src/stb_image_resize.o src/bit.o src/utf.o src/thread.o src/main.o src/gfx.o src/stb_truetype.o src/system.o src/gfx_font.o src/net.o src/zvon.o src/zvon_mixer.o src/zvon_sfx.o src/synth.o -lSDL2 -lluajit-5.1 -lm -o rein real\t0m2,466s\nuser\t0m1,882s\nsys\t0m0,559s\nЗапускаем тестовый пример, чтобы удостоверится, что все работает:$ ./rein demo/test.lua\n<br><img alt=\"Pasted image 20241217142636.png\" src=\"attachments/pasted-image-20241217142636.png\" target=\"_self\">Теперь можно попробовать написать простенькую демку. Для реализации я выбрал Множество Мандельброта.local w, h = screen:size()\nlocal x = 0\nlocal fps = 0 screen:clear(0) while sys.running() and x &lt;= w do for y = 0, h do local i = 0 local cx = -1.3 + x / 500 local cy = -0.55 + y / 500 local zx = 0 local zy = 0 while (i &lt;= 255) and (zx * zx + zy * zy) &lt; 6 do local xt = zx * zy zx = zx * zx - zy * zy + cx zy = 2 * xt + cy; i = i + 1 end screen:fill(x, y, 1, 1, {i, i*2, i*4}) end screen:clear(0, 256-8, 256, 256-8, 7) gfx.printf(0, 256-7, 1, \"Mandelbrot FPS:%d\", fps) x = x + 1 fps = gfx.flip(1/60)\nend\nПолучившийся результат:<br>\n<img alt=\"rein_mandelbrot.gif\" src=\"attachments/rein_mandelbrot.gif\" target=\"_self\">Так же стоить отметить, что в Rein входит редактор исходного кода, редактор графики, редактор звука, а так же клиент IRC :)$ ./rein edit [file.lua]\n$ ./rein sprited\n$ ./rein voiced\n$ ./rein irc\nВпечатления от использования Rein складываются положительные. На него точно стоит обратить свое внимание.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:dev","?query=tag:lua","?query=tag:art"],"author":"","coverImageURL":"","fullURL":"notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html","pathToRoot":"..","attachments":["attachments/pasted-image-20241217142636.png","attachments/rein_mandelbrot.gif"],"createdTime":1734438024888,"modifiedTime":1734434857112,"sourceSize":5223,"sourcePath":"Notes/2023-01-06 Рисуем Множество Мандельброта на Rein.md","exportPath":"notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html":{"title":"2023-11-04 Смотрим картинки с Reddit в Emacs","icon":"","description":"<a href=\".?query=tag:dev\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#dev\">#dev</a> <a href=\".?query=tag:lisp\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#lisp\">#lisp</a> <a href=\".?query=tag:emacs\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#emacs\">#emacs</a>\nДело было вечером, Делать было нечего…\n— Сергей Михалков\n<br>Думаю не секрет, что я являюсь пользователем&nbsp;операционной системы&nbsp;текстового редактора&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://www.gnu.org/software/emacs/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.gnu.org/software/emacs/\" target=\"_self\">Emacs</a>. Но при этом, я никогда не писал что-то свое с использованием&nbsp;Emacs Lisp, максимум, что делал, так это вносил различные изменения в свой&nbsp;.emacs.d&nbsp;для конфигурирования самого редактора.<br>Так как я уже использую&nbsp;Emacs&nbsp;для чтения&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://github.com/skeeto/elfeed\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/skeeto/elfeed\" target=\"_self\">RSS</a>&nbsp;и&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://github.com/emacsmirror/elpher\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/emacsmirror/elpher\" target=\"_self\">Gemini</a>, почему бы еще не просматривать свежие картинки с&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://www.reddit.com/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.reddit.com/\" target=\"_self\">Reddit</a>&nbsp;через него, подумал я.Знакомимся с материалами по языку и в “бой”:\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.gnu.org/software/emacs/manual/html_node/eintr/\" target=\"_self\">https://www.gnu.org/software/emacs/manual/html_node/eintr/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://emacsdocs.org/docs/elisp/Emacs-Lisp\" target=\"_self\">https://emacsdocs.org/docs/elisp/Emacs-Lisp</a>\nПервым делом нам надо подключить пакеты&nbsp;json&nbsp;и&nbsp;url, для того, чтобы можно было получать данные с URL и парсить JSON формат.(require 'json)\n(require 'url)\nДалее весь код умещается в пять функций, рассмотрим каждую из них.Функция&nbsp;my/insert-image-from-url&nbsp;предназначена для того чтобы получить изображение с URL адреса, и вставить его в текущий буфер. (defun my/insert-image-from-url (url) \"Insert image from URL.\" (let ((buffer (url-retrieve-synchronously url))) (unwind-protect (let ((data (with-current-buffer buffer (goto-char (point-min)) (search-forward \"\\n\\n\") (buffer-substring (point) (point-max))))) (insert-image (create-image data nil t :width 200))) (kill-buffer buffer))))\nВ коде функции&nbsp;unwind-protect&nbsp;используется для гарантированного выполнения некоторых действий, даже если возникает ошибка или исключение. В данном случае, если возникает ошибка при получении данных изображения с URL&nbsp;unwind-protect&nbsp;гарантирует, что буфер, в котором происходит манипуляция изображением, будет убит с помощью&nbsp;kill-buffer. Таким образом,&nbsp;unwind-protect&nbsp;позволяет избежать утечек памяти и других проблем, которые могут возникнуть при непредвиденных ситуациях.Функция&nbsp;my/get-response-from-url&nbsp;предназначена для получения данных с URL и возврата их ввиде строки. Используется, чтобы получить данные от Reddit API. (defun my/get-response-from-url (url) \"Get data from URL.\" (let ((buffer (url-retrieve-synchronously url))) (with-current-buffer buffer (unwind-protect (progn (goto-char (point-min)) (re-search-forward \"^$\") (buffer-substring-no-properties (point) (point-max))) (kill-buffer buffer)))))\nФункция&nbsp;my/normal-image-url-p&nbsp;предназначена для проверки, является ли URL допустимым для использования в качестве изображения.(defun my/normal-image-url-p (url) \"Check image URL.\" (and (not (string-match-p \"redgifs\" url)) (or (string-suffix-p \".png\" url) (string-suffix-p \".gif\" url) (string-suffix-p \".jpg\" url) (string-suffix-p \".jpeg\" url))))\nФункция&nbsp;my/get-new-images-from-subreddit&nbsp;предназначена для получения списка новых постов с изображениями с указанного subreddit. Результирующий список будет содержать информацию о каждом изображении, включая заголовок поста, ссылку на изображения и ссылку на сам пост.(defun my/get-new-images-from-subreddit (sub) \"Get list of SUB new images.\" (let* ((reddit-url \"https://www.reddit.com\") (url (concat reddit-url \"/r/\" sub \"/new.json\")) (json-str (my/get-response-from-url url)) (json-object (json-read-from-string json-str))) (remq nil (mapcar (lambda (child) (let* ((data (cdr (assoc 'data child))) (image-url (cdr (assoc 'url_overridden_by_dest data)))) (when (my/normal-image-url-p image-url) `((title . ,(cdr (assoc 'title data))) (image . ,image-url) (post . ,(concat reddit-url (cdr (assoc 'permalink data)))))))) (cdr (assoc 'children (cdr (assoc 'data json-object))))))))\nИ последняя функция&nbsp;my/show-reddit-images&nbsp;предназначена для открытия нового буфера с интересующими нас картинками. Она является интерактивной, что позволяет нам вызвать ее с помощью&nbsp;M-x&nbsp;и передать интересующий нас subreddit. (defun my/show-reddit-images (sub) \"Show new image from SUB.\" (interactive \"sEnter subreddit: \") (let ((buffer (generate-new-buffer (format \"*Images [%s]*\" sub)))) (with-current-buffer buffer (erase-buffer) (dolist (item (my/get-new-images-from-subreddit sub)) (dolist (key '(title post image)) (insert (concat (propertize (capitalize (symbol-name key)) 'face 'bold) \": \" (cdr (assoc key item)) \"\\n\"))) (my/insert-image-from-url (cdr (assoc 'image item))) (insert \"\\n\\n\"))) (switch-to-buffer buffer)))\n<br>Итоговый результат работы всего этого в совокупности выглядит&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://github.com/KikyTokamuro/emacs-config/blob/main/elisp/reddit-images.el\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/KikyTokamuro/emacs-config/blob/main/elisp/reddit-images.el\" target=\"_self\">так</a>:<br><img alt=\"Pasted image 20241217143050.png\" src=\"attachments/pasted-image-20241217143050.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:dev","?query=tag:lisp","?query=tag:emacs"],"author":"","coverImageURL":"","fullURL":"notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html","pathToRoot":"..","attachments":["attachments/pasted-image-20241217143050.png"],"createdTime":1734438024888,"modifiedTime":1734435051143,"sourceSize":6584,"sourcePath":"Notes/2023-11-04 Смотрим картинки с Reddit в Emacs.md","exportPath":"notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"curriculum-vitae.html":{"title":"Curriculum Vitae","icon":"","description":"Period: June 2024 - Currently\nPosition: Tech Lead / Developer\nType: Full time\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://bizzup.ru/\" target=\"_self\">https://bizzup.ru/</a>\nDeveloping projects for client tasks.\nDeveloping integration with “Bitrix24”.\nTechnology stack used in development: PHP, JavaScript, JQuery, PostgreSQL.\nPeriod: September 2023 - June 2024\nPosition: Lecturer\nType: Contract work<br>\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://polytech21.ru/\" target=\"_self\">https://polytech21.ru/</a>\nTeaching programming courses (Python, Pascal).\nPeriod: August 2023 - June 2024\nPosition: Developer\nType: Full time<br>\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://dora.bz/\" target=\"_self\">http://dora.bz/</a>\nDevelopment of firmware for the smart door controller based on FreeRTOS.\nImplementation of Modbus protocol support.\nImplementation of Wiegand protocol support.\nImplementation of iButton readers (1-Wire) support.\nDevelopment of an MVP mobile application for interaction with the controller via BLE.\nTechnology stack used in development: C, C++, Golang, Make, CMake, ESP-IDF, FreeRTOS.\nPeriod: January 2023 - August 2023\nPosition: Web Developer\nType: Full time<br>\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dorren.ru/\" target=\"_self\">https://dorren.ru/</a>\nDevelopment of the server part of the access control and management system.\nDevelopment of firmware for the smart door controller based on FreeRTOS.\nDevelopment of a system for storing controller events in Flash memory.\nDevelopment of modules for interaction of the controller with various peripherals (LCD, SD, Camera, etc.).\nCI setup based on Github Actions.\nTechnology stack used in development: Golang, C, C++, Make, CMake, ESP-IDF, FreeRTOS.\nPeriod: June 2023 - August 2023\nPosition: Developer\nType: Contract work<br>\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intiit.ru/\" target=\"_self\">https://intiit.ru/</a>\nDevelopment of a geographic information system.\nDatabase design.\nDevelopment of API request handlers.\nDevelopment of a user system (a system of roles, an authorization system linked to a company, a system for monitoring and limiting the number of user requests).\nDevelopment of a system of interaction between companies, users and cities.\nDevelopment of an intuitive interface for automatic collection of geoinformation data.\nImplementation of a caching system for searching geoinformation data.\nSetting up deployment automation and application management using containerization.\nTechnology stack used in development: Golang, JavaScript, PostgreSQL, Nginx, Grafana, Redis, Docker.\nPeriod: September 2022 - June 2023\nPosition: Lecturer\nType: Contract work<br>\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://polytech21.ru/\" target=\"_self\">https://polytech21.ru/</a>\nTeaching programming courses (Python, Pascal).\nPeriod: July 2021 - December 2022\nPosition: Fullstack Web Developer\nType: Full time<br>\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://cmdf5.ru/\" target=\"_self\">https://cmdf5.ru/</a>\nDeveloping projects for client tasks.\nDeveloping site integration with “amoCRM”.\nDeveloping a system for providing technical support.\nDeveloping a system for copying transactions in “amoCRM” with history.\nDeveloping a system for generating various documents: invoices, commercial offers, etc.\nTechnology stack used in development: PHP, JavaScript, JQuery, MySQL, MongoDB, Redis.\nPeriod: November 2020 - July 2021\nPosition: Technician-programmer\nType: Full time<br>\nWeb-Site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.dynamics.com.ru/\" target=\"_self\">https://www.dynamics.com.ru/</a>\nDeveloping patches that add new functionality to U-Boot.\nDeveloping a utility for interacting with OP-TEE (Arm TrustZone) Secure Storage.\nDeveloping REST API based on microservice architecture, in the Golang programming language.\nDeveloping various shell scripts for automated routine tasks.\nPeriod: … - November 2020\nBug Hunting <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://yandex.ru/bugbounty/i/hall-of-fame/\" target=\"_self\">https://yandex.ru/bugbounty/i/hall-of-fame/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.openbugbounty.org/researchers/KikyTokamuro/\" target=\"_self\">https://www.openbugbounty.org/researchers/KikyTokamuro/</a> Period: 2023 - Now\nSpecialty: Informatics and Computer Engineering (Master’s degree)<br>\nWeb-site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mospolytech.ru/\" target=\"_self\">https://mospolytech.ru/</a>Period: 2019 - 2023\nSpecialty: Informatics and Computer Engineering (Bachelor’s degree)<br>\nWeb-site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mospolytech.ru/\" target=\"_self\">https://mospolytech.ru/</a>Period: 2015 - 2019\nSpecialty: Computer systems technician<br>\nWeb-site:&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://www.chemk.org/\" target=\"_self\">http://www.chemk.org/</a>\nDeveloping backends using Golang and PHP\nWorking with data transfer protocols: HTTP, TCP, MQTT, gRPC, etc\nSingle Page Application development based on jQuery and JavaScript\nExperience of using MySQL, SQLite, MongoDB, PostgreSQL, Redis\nBasic web design\nSome experience in Pentesting and Bug Hunting\nExperience of using programming languages as hobby: Common Lisp, Scheme\nExperience in system software development for GNU/Linux using C programming language\nExperience with build automation tools: Make, CMake\nBasic experience in embedded software development in C/C++ and FreeRTOS (ESP-IDF)\nExperience of using version control systems: Git\nBasic experience with Docker, Docker Compose\nComfortable working in a GNU/Linux environment\nComfortable working in GNU Emacs Russian - Native\nEnglish - Reading documentation\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Work experience","level":1,"id":"Work_experience_0"},{"heading":"BIZZUP","level":3,"id":"BIZZUP_0"},{"heading":"Cheboksary Institute (branch) of Moscow Polytechnic University","level":3,"id":"Cheboksary_Institute_(branch)_of_Moscow_Polytechnic_University_0"},{"heading":"DORA","level":3,"id":"DORA_0"},{"heading":"DORREN","level":3,"id":"DORREN_0"},{"heading":"INTIIT","level":3,"id":"INTIIT_0"},{"heading":"Cheboksary Institute (branch) of Moscow Polytechnic University","level":3,"id":"Cheboksary_Institute_(branch)_of_Moscow_Polytechnic_University_1"},{"heading":"Command F5","level":3,"id":"Command_F5_0"},{"heading":"SPE “Dynamics”","level":3,"id":"SPE_“Dynamics”_0"},{"heading":"Freelance","level":3,"id":"Freelance_0"},{"heading":"Education","level":1,"id":"Education_0"},{"heading":"Moscow Polytechnic University","level":3,"id":"Moscow_Polytechnic_University_0"},{"heading":"Moscow Polytechnic University","level":3,"id":"Moscow_Polytechnic_University_1"},{"heading":"Interregional Competence Center - Cheboksary Electromechanical College","level":3,"id":"Interregional_Competence_Center_-_Cheboksary_Electromechanical_College_0"},{"heading":"Skills","level":1,"id":"Skills_0"},{"heading":"Languages","level":1,"id":"Languages_0"}],"links":[".html"],"author":"","coverImageURL":"","fullURL":"curriculum-vitae.html","pathToRoot":".","attachments":[],"createdTime":1734438023950,"modifiedTime":1734444113153,"sourceSize":6300,"sourcePath":"Curriculum Vitae.md","exportPath":"curriculum-vitae.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"index.html":{"title":"index","icon":"","description":"Hey, I’m Arkhangelsky Daniil aka Kiky Tokamuro, a Software Engineer.At work, I mainly specialize in&nbsp;C,&nbsp;PHP,&nbsp;Golang. But in my spare time, I like to work with&nbsp;Lisp,&nbsp;Python, and many others. Most of my non-work focus is in Programming Language theory, Operation System theory, and Developer tooling.You can find all my projects and research on my&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://github.com/KikyTokamuro\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/KikyTokamuro\" target=\"_self\">GitHub</a>.<br>If you have a position or project that you think might fit me, please send me an&nbsp;<a data-tooltip-position=\"top\" aria-label=\"mailto:kiky.tokamuro@yandex.ru\" rel=\"noopener nofollow\" class=\"external-link\" href=\".html\" target=\"_self\">Email</a>, or give my&nbsp;<a data-href=\"Curriculum Vitae\" href=\"curriculum-vitae.html#_0\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Curriculum Vitae</a>&nbsp;to someone.<br>I also occasionally post interesting posts to&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://mastodon.social/@kikytokamuro\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mastodon.social/@kikytokamuro\" target=\"_self\">Mastodon</a>.Outside of work and Open-Source, I like to work on my house, hangout with my wife, and read. I mostly read Novels and Fantasy books, but I’ll never say no to a good software or hardware book.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[".html","curriculum-vitae.html#_0"],"author":"","coverImageURL":"","fullURL":"index.html","pathToRoot":".","attachments":[],"createdTime":1734438023950,"modifiedTime":1734426492790,"sourceSize":883,"sourcePath":"index.md","exportPath":"index.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"journal/2024/12/2024-12-18.html":{"title":"2024-12-18","icon":"","description":"<a href=\".?query=tag:emacs\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#emacs\">#emacs</a> <a href=\".?query=tag:lisp\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#lisp\">#lisp</a> <br>Наткнулся на забавную <a data-tooltip-position=\"top\" aria-label=\"https://www.reddit.com/r/emacs/comments/lly7po/comment/gnvzisy/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.reddit.com/r/emacs/comments/lly7po/comment/gnvzisy/\" target=\"_self\">историю</a> использования Emacs Lisp как языка общего назначения, при реализации маршрутизация сообщений ATC.Приложу ее тут:Early '90s, after \"Die Wende\" and the unification of East and West Germany. I was the person that got sent to the tough jobs, or the ones that nobody else wanted, so I found myself one Monday morning checking in at a DASA plant (DASA was first German Aerospace, then Daimler Aerospace, and now a part of Airbus). The project was between DASA and HP as main contractors to replace both countries' ATC systems with a unified one. So we have two megacompanies and a government contract, and shops like my employer getting some juicy partial jobs. And there are actually two Emacs stories in here. First: that Monday morning, I check in with the developers that I'm supposed to help out. They are in a lab surrounded with wonderful stuff - the newest HP workstations on HP/UX, and a bunch of HP's top-of-the-range servers, fridge sized and close to 7 figures list price. The reason I got called in though: they couldn't work on the systems. They were VMS developers, pulled off a different project, and supposed to code up some part of the whole system (I forgot which one) in C on VMS (a truly gross idea, because C was not very well adapted to VMS, but that's a different thing). Anyway, they got their workstations, manuals, were told that&nbsp;`vi`&nbsp;was the editor, and have a nice day. Here we are: a dozen people struggling to type code in Vi. And it's not that they were stupid, but muscle memory for the VMS editor (TPU, IIRC, but this is a long time ago) does really not translate well to Vi. I went back home (was closer than the office), loaded all the GNU sources on a QIC tape, went back, and started a routine that was all too well known back in the day: compile the GNU toolchain on some vendor Unix in order to be able to compile the nice utilities, including Emacs. GCC took the longest, you need three or four build stages before you have a reliable compiler, but a day later I had Emacs on HP/UX. It was downhilll from there: I did VMS work, so I whipped up a little&nbsp;`init.el`&nbsp;that mapped to the VMS editor as closely as possible, and rolled it out to the workstations. A short briefing later and, well, they almost hugged me :). Some weeks later I got called to our second office, they were behind schedule and needed an extra pair of hands. We had - for reasons I don't know - ATC workstations on microVAXen running that 4GL on VMS but they struggled with getting messaging over the network going - the 4GL was terminal oriented, did not know what a network was, but ATC messages (like airplane hand-overs from airfield to airfield or to Eurocontrol) needed to go to the local message router and from there to the site the message was destined for. We're talking \"no internet\" here - all X.25 and leased lines and zero convenience. Well, I got to work and figured out that it was easier to make VMS talk TCP/IP than HP/UX talk DECnet, so I got that setup, and then picked the hot new tech, DCE, to do the messaging. I did C extentions for the 4GL a lot, so the VMS side was done in a couple of days. Then they told me to talk to Herr Doktor So-and-so who was responsible for the actual message router. In Germany, a Herr Doktor is always right (they have forgiven Moses by now for not having space on the stone tablets, but it really is the 11th Commandment). This one worked at Symbolics before so knew one programming language: Lisp. He wanted to code the message router in Lisp because of the \"complex\" (meh) requirements, but there was no Lisp (or no Lisp in budget) for HP/UX so he was stuck. I told him about Emacs, gave him my tape with the ports, and maybe that was a mistake ;-) A week later - I helped out finishing the 4GL UI in the meantime and completed the messaging protocol - he called me in, quite happy. He showed me the code - page after page of Emacs Lisp, with exactly zero comments \"because Lisp is self-documenting\". I got scared, it was an air traffic control system after all, but I was no Herr Doktor so I whipped up the DCE native code for Emacs, made a hack to have it start headless in message router server mode, and we got messages to flow. I did a code hand-over, and drove back home a couple of days later. The \"self-documenting\" code, as far as I know, landed in production so at least for a while, all ATC message routing in Germany was done through Emacs. Pro tip: don't look in the kitchen when governments brew up safety critical systems. I was scared to fly over Germany for a while...\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:emacs","?query=tag:lisp"],"author":"","coverImageURL":"","fullURL":"journal/2024/12/2024-12-18.html","pathToRoot":"../../..","attachments":[],"createdTime":1734526343134,"modifiedTime":1734526597559,"sourceSize":4794,"sourcePath":"Journal/2024/12/2024-12-18.md","exportPath":"journal/2024/12/2024-12-18.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"},"journal/2025/02/2025-02-20.html":{"title":"2025-02-20","icon":"","description":"<a href=\".?query=tag:dev\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#dev\">#dev</a> <a href=\".?query=tag:elm\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#elm\">#elm</a> <a href=\".?query=tag:fp\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#fp\">#fp</a> <br>Решил попробовать <a data-tooltip-position=\"top\" aria-label=\"https://elm-lang.org/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://elm-lang.org/\" target=\"_self\">Elm</a> и опубликовал своей первый пакет <a data-tooltip-position=\"top\" aria-label=\"https://package.elm-lang.org/packages/kikytokamuro/elm-linerbar/latest\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://package.elm-lang.org/packages/kikytokamuro/elm-linerbar/latest\" target=\"_self\">LinerBar</a> для построение простых вертикальных линейных графиков.<br>\n<img alt=\"Pasted image 20250220152742.png\" src=\"attachments/pasted-image-20250220152742.png\" target=\"_self\">Из основных преимуществ использования Elm отмечу:\nОтсутствие ошибок времени исполнения\nЧёткие сообщения об ошибках на моменте сборки\nИммутабельность и чистота\nИнтересная TEA (The Elm Architecture) архитектура\nХорошая документация\n<br>А в публикации самого пакета мне помогла <a data-tooltip-position=\"top\" aria-label=\"https://korban.net/posts/elm/2018-10-02-basic-steps-publish-package-elm-19/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://korban.net/posts/elm/2018-10-02-basic-steps-publish-package-elm-19/\" target=\"_self\">статья</a>, где подробно описаны требования к публикации, как проверить генерацию документации, и т.д.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:dev","?query=tag:elm","?query=tag:fp"],"author":"","coverImageURL":"","fullURL":"journal/2025/02/2025-02-20.html","pathToRoot":"../../..","attachments":["attachments/pasted-image-20250220152742.png"],"createdTime":1740054041757,"modifiedTime":1740054665792,"sourceSize":1113,"sourcePath":"Journal/2025/02/2025-02-20.md","exportPath":"journal/2025/02/2025-02-20.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown"}},"fileInfo":{"notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html":{"createdTime":1734438024857,"modifiedTime":1734444816042,"sourceSize":4072,"sourcePath":"Notes/2019-09-08 Использования Proxmark3 для клонирования пропуска через турникет.md","exportPath":"notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2019-10-06-перепрошивка-nokia-n900.html":{"createdTime":1734438024857,"modifiedTime":1734430757767,"sourceSize":3811,"sourcePath":"Notes/2019-10-06 Перепрошивка Nokia N900.md","exportPath":"notes/2019-10-06-перепрошивка-nokia-n900.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2019-10-06-созданиe-initramfs.html":{"createdTime":1734438024873,"modifiedTime":1734430749469,"sourceSize":3155,"sourcePath":"Notes/2019-10-06 Созданиe initramfs.md","exportPath":"notes/2019-10-06-созданиe-initramfs.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html":{"createdTime":1734438024873,"modifiedTime":1734431127073,"sourceSize":4708,"sourcePath":"Notes/2019-10-13 Raspberry Pi + Nokia 5110 LCD = ❤.md","exportPath":"notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2020-06-20-golang-заметки-логирование.html":{"createdTime":1734438024873,"modifiedTime":1734430715102,"sourceSize":3019,"sourcePath":"Notes/2020-06-20 Golang заметки - Логирование.md","exportPath":"notes/2020-06-20-golang-заметки-логирование.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html":{"createdTime":1734438024873,"modifiedTime":1734430705118,"sourceSize":1821,"sourcePath":"Notes/2020-08-03 Golang заметки - Кросс-платформенная компиляция.md","exportPath":"notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html":{"createdTime":1734438024888,"modifiedTime":1734430826869,"sourceSize":2924,"sourcePath":"Notes/2020-08-07 Golang заметки - Работа с HTML шаблонами.md","exportPath":"notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2022-02-16-lisp-alien.html":{"createdTime":1734438024888,"modifiedTime":1734434697459,"sourceSize":2546,"sourcePath":"Notes/2022-02-16 Lisp Alien.md","exportPath":"notes/2022-02-16-lisp-alien.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html":{"createdTime":1734438024888,"modifiedTime":1734434857112,"sourceSize":5223,"sourcePath":"Notes/2023-01-06 Рисуем Множество Мандельброта на Rein.md","exportPath":"notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html":{"createdTime":1734438024888,"modifiedTime":1734435051143,"sourceSize":6584,"sourcePath":"Notes/2023-11-04 Смотрим картинки с Reddit в Emacs.md","exportPath":"notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"curriculum-vitae.html":{"createdTime":1734438023950,"modifiedTime":1734444113153,"sourceSize":6300,"sourcePath":"Curriculum Vitae.md","exportPath":"curriculum-vitae.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"index.html":{"createdTime":1734438023950,"modifiedTime":1734426492790,"sourceSize":883,"sourcePath":"index.md","exportPath":"index.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"site-lib/scripts/graph-wasm.wasm":{"createdTime":1734438127937,"modifiedTime":1734427251427.5579,"sourceSize":23655,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.wasm","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null},"site-lib/fonts/94f2f163d4b698242fef.otf":{"createdTime":1740054743034,"modifiedTime":1740054743034,"sourceSize":66800,"sourcePath":"","exportPath":"site-lib/fonts/94f2f163d4b698242fef.otf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/72505e6a122c6acd5471.woff2":{"createdTime":1740054743035,"modifiedTime":1740054743035,"sourceSize":104232,"sourcePath":"","exportPath":"site-lib/fonts/72505e6a122c6acd5471.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/2d5198822ab091ce4305.woff2":{"createdTime":1740054743036,"modifiedTime":1740054743036,"sourceSize":104332,"sourcePath":"","exportPath":"site-lib/fonts/2d5198822ab091ce4305.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/c8ba52b05a9ef10f4758.woff2":{"createdTime":1740054743037,"modifiedTime":1740054743037,"sourceSize":98868,"sourcePath":"","exportPath":"site-lib/fonts/c8ba52b05a9ef10f4758.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cb10ffd7684cd9836a05.woff2":{"createdTime":1740054743037,"modifiedTime":1740054743037,"sourceSize":106876,"sourcePath":"","exportPath":"site-lib/fonts/cb10ffd7684cd9836a05.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/b5f0f109bc88052d4000.woff2":{"createdTime":1740054743038,"modifiedTime":1740054743038,"sourceSize":105804,"sourcePath":"","exportPath":"site-lib/fonts/b5f0f109bc88052d4000.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cbe0ae49c52c920fd563.woff2":{"createdTime":1740054743039,"modifiedTime":1740054743039,"sourceSize":106108,"sourcePath":"","exportPath":"site-lib/fonts/cbe0ae49c52c920fd563.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/535a6cf662596b3bd6a6.woff2":{"createdTime":1740054743040,"modifiedTime":1740054743040,"sourceSize":111708,"sourcePath":"","exportPath":"site-lib/fonts/535a6cf662596b3bd6a6.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/70cc7ff27245e82ad414.ttf":{"createdTime":1740054743045,"modifiedTime":1740054743045,"sourceSize":192740,"sourcePath":"","exportPath":"site-lib/fonts/70cc7ff27245e82ad414.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/454577c22304619db035.ttf":{"createdTime":1740054743046,"modifiedTime":1740054743046,"sourceSize":161376,"sourcePath":"","exportPath":"site-lib/fonts/454577c22304619db035.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/52ac8f3034507f1d9e53.ttf":{"createdTime":1740054743041,"modifiedTime":1740054743041,"sourceSize":191568,"sourcePath":"","exportPath":"site-lib/fonts/52ac8f3034507f1d9e53.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/05b618077343fbbd92b7.ttf":{"createdTime":1740054743042,"modifiedTime":1740054743042,"sourceSize":155288,"sourcePath":"","exportPath":"site-lib/fonts/05b618077343fbbd92b7.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2":{"createdTime":1740054743032,"modifiedTime":1740054743032,"sourceSize":7876,"sourcePath":"","exportPath":"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/media/874d8b8e340f75575caa.svg":{"createdTime":1740054743033,"modifiedTime":1740054743033,"sourceSize":317,"sourcePath":"","exportPath":"site-lib/media/874d8b8e340f75575caa.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/media/3d6c1bdc4d87cde4de67.svg":{"createdTime":1740054743033,"modifiedTime":1740054743033,"sourceSize":279,"sourcePath":"","exportPath":"site-lib/media/3d6c1bdc4d87cde4de67.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/html/file-tree-content.html":{"createdTime":1740054743391,"modifiedTime":1740054743391,"sourceSize":9855,"sourcePath":"","exportPath":"site-lib/html/file-tree-content.html","showInTree":false,"treeOrder":0,"backlinks":[],"type":"html","data":null},"site-lib/scripts/webpage.js":{"createdTime":1740054023518,"modifiedTime":1740054023518,"sourceSize":101494,"sourcePath":"","exportPath":"site-lib/scripts/webpage.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-wasm.js":{"createdTime":1740054023518,"modifiedTime":1740054023518,"sourceSize":12885,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-render-worker.js":{"createdTime":1740054023518,"modifiedTime":1740054023518,"sourceSize":5681,"sourcePath":"","exportPath":"site-lib/scripts/graph-render-worker.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/media/favicon.ico":{"createdTime":1734438258923,"modifiedTime":1734438259313,"sourceSize":15406,"sourcePath":"attachments/favicon.ico","exportPath":"site-lib/media/favicon.ico","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/styles/snippets.css":{"createdTime":1740054743179,"modifiedTime":1740054743179,"sourceSize":91,"sourcePath":"","exportPath":"site-lib/styles/snippets.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/obsidian.css":{"createdTime":1740054743176,"modifiedTime":1740054743176,"sourceSize":155631,"sourcePath":"","exportPath":"site-lib/styles/obsidian.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/global-variable-styles.css":{"createdTime":1740054743012,"modifiedTime":1740054743012,"sourceSize":279,"sourcePath":"","exportPath":"site-lib/styles/global-variable-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/main-styles.css":{"createdTime":1740054023599,"modifiedTime":1740054023599,"sourceSize":19129,"sourcePath":"","exportPath":"site-lib/styles/main-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"attachments/pasted-image-20241217143050.png":{"createdTime":1734438024795,"modifiedTime":1734435050689,"sourceSize":381107,"sourcePath":"attachments/Pasted image 20241217143050.png","exportPath":"attachments/pasted-image-20241217143050.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217142636.png":{"createdTime":1734438024779,"modifiedTime":1734434796576,"sourceSize":23054,"sourcePath":"attachments/Pasted image 20241217142636.png","exportPath":"attachments/pasted-image-20241217142636.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/rein_mandelbrot.gif":{"createdTime":1734438024810,"modifiedTime":1734434829485,"sourceSize":1106177,"sourcePath":"attachments/rein_mandelbrot.gif","exportPath":"attachments/rein_mandelbrot.gif","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217132114.png":{"createdTime":1734438024748,"modifiedTime":1734430874486,"sourceSize":601872,"sourcePath":"attachments/Pasted image 20241217132114.png","exportPath":"attachments/pasted-image-20241217132114.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/process.gif":{"createdTime":1734438024795,"modifiedTime":1734430970333,"sourceSize":1628512,"sourcePath":"attachments/process.gif","exportPath":"attachments/process.gif","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217132156.png":{"createdTime":1734438024763,"modifiedTime":1734430916601,"sourceSize":5482716,"sourcePath":"attachments/Pasted image 20241217132156.png","exportPath":"attachments/pasted-image-20241217132156.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217132218.png":{"createdTime":1734438024779,"modifiedTime":1734430938142,"sourceSize":5482292,"sourcePath":"attachments/Pasted image 20241217132218.png","exportPath":"attachments/pasted-image-20241217132218.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217125240.png":{"createdTime":1734438024716,"modifiedTime":1734429160812,"sourceSize":387147,"sourcePath":"attachments/Pasted image 20241217125240.png","exportPath":"attachments/pasted-image-20241217125240.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217125302.png":{"createdTime":1734438024731,"modifiedTime":1734429182301,"sourceSize":453517,"sourcePath":"attachments/Pasted image 20241217125302.png","exportPath":"attachments/pasted-image-20241217125302.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217125331.png":{"createdTime":1734438024732,"modifiedTime":1734429211350,"sourceSize":216193,"sourcePath":"attachments/Pasted image 20241217125331.png","exportPath":"attachments/pasted-image-20241217125331.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217124638.png":{"createdTime":1734438024700,"modifiedTime":1734428798505,"sourceSize":2409999,"sourcePath":"attachments/Pasted image 20241217124638.png","exportPath":"attachments/pasted-image-20241217124638.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217131719.png":{"createdTime":1734438024732,"modifiedTime":1734430639214,"sourceSize":35574,"sourcePath":"attachments/Pasted image 20241217131719.png","exportPath":"attachments/pasted-image-20241217131719.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"attachments/pasted-image-20241217122828.png":{"createdTime":1734438024700,"modifiedTime":1734427708601,"sourceSize":840486,"sourcePath":"attachments/Pasted image 20241217122828.png","exportPath":"attachments/pasted-image-20241217122828.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/rss.xml":{"createdTime":1734438318933,"modifiedTime":1734438318933,"sourceSize":47250,"sourcePath":"","exportPath":"site-lib/rss.xml","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null},"journal/2024/12/2024-12-18.html":{"createdTime":1734526343134,"modifiedTime":1734526597559,"sourceSize":4794,"sourcePath":"Journal/2024/12/2024-12-18.md","exportPath":"journal/2024/12/2024-12-18.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"journal/2025/02/2025-02-20.html":{"createdTime":1740054041757,"modifiedTime":1740054665792,"sourceSize":1113,"sourcePath":"Journal/2025/02/2025-02-20.md","exportPath":"journal/2025/02/2025-02-20.html","showInTree":true,"treeOrder":0,"backlinks":[],"type":"markdown","data":null},"attachments/pasted-image-20250220152742.png":{"createdTime":1740054462594,"modifiedTime":1740054462594,"sourceSize":5269,"sourcePath":"attachments/Pasted image 20250220152742.png","exportPath":"attachments/pasted-image-20250220152742.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null}},"sourceToTarget":{"Notes/2019-09-08 Использования Proxmark3 для клонирования пропуска через турникет.md":"notes/2019-09-08-использования-proxmark3-для-клонирования-пропуска-через-турникет.html","Notes/2019-10-06 Перепрошивка Nokia N900.md":"notes/2019-10-06-перепрошивка-nokia-n900.html","Notes/2019-10-06 Созданиe initramfs.md":"notes/2019-10-06-созданиe-initramfs.html","Notes/2019-10-13 Raspberry Pi + Nokia 5110 LCD = ❤.md":"notes/2019-10-13-raspberry-pi-+-nokia-5110-lcd-=-❤.html","Notes/2020-06-20 Golang заметки - Логирование.md":"notes/2020-06-20-golang-заметки-логирование.html","Notes/2020-08-03 Golang заметки - Кросс-платформенная компиляция.md":"notes/2020-08-03-golang-заметки-кросс-платформенная-компиляция.html","Notes/2020-08-07 Golang заметки - Работа с HTML шаблонами.md":"notes/2020-08-07-golang-заметки-работа-с-html-шаблонами.html","Notes/2022-02-16 Lisp Alien.md":"notes/2022-02-16-lisp-alien.html","Notes/2023-01-06 Рисуем Множество Мандельброта на Rein.md":"notes/2023-01-06-рисуем-множество-мандельброта-на-rein.html","Notes/2023-11-04 Смотрим картинки с Reddit в Emacs.md":"notes/2023-11-04-смотрим-картинки-с-reddit-в-emacs.html","Curriculum Vitae.md":"curriculum-vitae.html","index.md":"index.html","":"site-lib/styles/main-styles.css","attachments/favicon.ico":"site-lib/media/favicon.ico","attachments/Pasted image 20241217143050.png":"attachments/pasted-image-20241217143050.png","attachments/Pasted image 20241217142636.png":"attachments/pasted-image-20241217142636.png","attachments/rein_mandelbrot.gif":"attachments/rein_mandelbrot.gif","attachments/Pasted image 20241217132114.png":"attachments/pasted-image-20241217132114.png","attachments/process.gif":"attachments/process.gif","attachments/Pasted image 20241217132156.png":"attachments/pasted-image-20241217132156.png","attachments/Pasted image 20241217132218.png":"attachments/pasted-image-20241217132218.png","attachments/Pasted image 20241217125240.png":"attachments/pasted-image-20241217125240.png","attachments/Pasted image 20241217125302.png":"attachments/pasted-image-20241217125302.png","attachments/Pasted image 20241217125331.png":"attachments/pasted-image-20241217125331.png","attachments/Pasted image 20241217124638.png":"attachments/pasted-image-20241217124638.png","attachments/Pasted image 20241217131719.png":"attachments/pasted-image-20241217131719.png","attachments/Pasted image 20241217122828.png":"attachments/pasted-image-20241217122828.png","Journal/2024/12/2024-12-18.md":"journal/2024/12/2024-12-18.html","Journal/2025/02/2025-02-20.md":"journal/2025/02/2025-02-20.html","attachments/Pasted image 20250220152742.png":"attachments/pasted-image-20250220152742.png"},"featureOptions":{"backlinks":{"featureId":"backlinks","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"Backlinks","featurePlacement":{"selector":".footer","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""}},"tags":{"featureId":"tags","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"","featurePlacement":{"selector":".header .data-bar","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"showInlineTags":true,"showFrontmatterTags":true,"info_showInlineTags":{"show":true,"name":"","description":"Show tags defined inside the document at the top of the page.","placeholder":""},"info_showFrontmatterTags":{"show":true,"name":"","description":"Show tags defined in the frontmatter of the document at the top of the page.","placeholder":""}},"alias":{"featureId":"aliases","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"","featurePlacement":{"selector":".header .data-bar","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""}},"properties":{"featureId":"properties","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"Properties","featurePlacement":{"selector":".header","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_hideProperties":{"show":true,"name":"","description":"A list of properties to hide from the properties view","placeholder":""}},"fileNavigation":{"featureId":"file-navigation","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"","featurePlacement":{"selector":"#left-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"showCustomIcons":false,"showDefaultFolderIcons":false,"showDefaultFileIcons":false,"defaultFolderIcon":"lucide//folder","defaultFileIcon":"lucide//file","defaultMediaIcon":"lucide//file-image","exposeStartingPath":true,"info_showCustomIcons":{"show":true,"name":"","description":"Show custom icons for files and folders","placeholder":""},"info_showDefaultFolderIcons":{"show":true,"name":"","description":"Show a default icon of a folder for every folder in the tree","placeholder":""},"info_showDefaultFileIcons":{"show":true,"name":"","description":"Show a default icon of a file for every file in the tree","placeholder":""},"info_defaultFolderIcon":{"show":true,"name":"","description":"The icon to use for folders. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultFileIcon":{"show":true,"name":"","description":"The icon to use for files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultMediaIcon":{"show":true,"name":"","description":"The icon to use for media files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_exposeStartingPath":{"show":true,"name":"","description":"Whether or not to show the current file in the file tree when the page is first loaded","placeholder":""},"includePath":"site-lib/html/file-tree.html"},"search":{"featureId":"search","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"Search...","featurePlacement":{"selector":"#left-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""}},"outline":{"featureId":"outline","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"Outline","featurePlacement":{"selector":"#right-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"startCollapsed":false,"minCollapseDepth":0,"info_startCollapsed":{"show":true,"name":"","description":"Should the outline start collapsed?","placeholder":""},"info_minCollapseDepth":{"show":true,"name":"","description":"Only allow outline items to be collapsed if they are at least this many levels deep in the tree.","placeholder":"","dropdownOptions":{"1":1,"2":2,"No Collapse":100}}},"themeToggle":{"featureId":"theme-toggle","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"","featurePlacement":{"selector":"#right-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""}},"graphView":{"featureId":"graph-view","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"Graph View","featurePlacement":{"selector":"#right-sidebar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"showOrphanNodes":true,"showAttachments":false,"allowGlobalGraph":true,"allowExpand":true,"attractionForce":1,"linkLength":15,"repulsionForce":80,"centralForce":2,"edgePruning":100,"minNodeRadius":3,"maxNodeRadius":7,"info_showOrphanNodes":{"show":true,"name":"","description":"Show nodes that are not connected to any other nodes.","placeholder":""},"info_showAttachments":{"show":true,"name":"","description":"Show attachments like images and PDFs as nodes in the graph.","placeholder":""},"info_allowGlobalGraph":{"show":true,"name":"","description":"Allow the user to view the global graph of all nodes.","placeholder":""},"info_allowExpand":{"show":true,"name":"","description":"Allow the user to pop-out the graph view to take up the whole screen","placeholder":""},"info_attractionForce":{"show":true,"name":"","description":"How much should linked nodes attract each other? This will make the graph appear more clustered.","placeholder":""},"info_linkLength":{"show":true,"name":"","description":"How long should the links between nodes be? The shorter the links the more connected nodes will cluster together.","placeholder":""},"info_repulsionForce":{"show":true,"name":"","description":"How much should nodes repel each other? This will make disconnected parts more spread out.","placeholder":""},"info_centralForce":{"show":true,"name":"","description":"How much should nodes be attracted to the center? This will make the graph appear more dense and circular.","placeholder":""},"info_edgePruning":{"show":true,"name":"","description":"Edges with a length above this threshold will not be rendered, however they will still contribute to the simulation. This can help large tangled graphs look more organised. Hovering over a node will still display these links.","placeholder":""},"info_minNodeRadius":{"show":true,"name":"","description":"How small should the smallest nodes be? The smaller a node is the less it will attract other nodes.","placeholder":""},"info_maxNodeRadius":{"show":true,"name":"","description":"How large should the largest nodes be? Nodes are sized by how many links they have. The larger a node is the more it will attract other nodes. This can be used to create a good grouping around the most important nodes.","placeholder":""}},"sidebar":{"featureId":"sidebar","enabled":true,"unavailable":false,"alwaysEnabled":false,"allowResizing":true,"allowCollapsing":true,"rightDefaultWidth":"20em","leftDefaultWidth":"20em","info_allowResizing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be resized","placeholder":""},"info_allowCollapsing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be collapsed","placeholder":""},"info_rightDefaultWidth":{"show":true,"name":"","description":"The default width of the right sidebar","placeholder":""},"info_leftDefaultWidth":{"show":true,"name":"","description":"The default width of the left sidebar","placeholder":""}},"customHead":{"featureId":"custom-head","enabled":true,"unavailable":false,"alwaysEnabled":false,"displayTitle":"","featurePlacement":{"selector":"head","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"sourcePath":"","info_sourcePath":{"show":true,"name":"","description":"The local path to the source .html file which will be included.","placeholder":"","fileInputOptions":{"makeRelativeToVault":true,"browseButton":true}},"includePath":"site-lib/html/custom-head.html"},"document":{"featureId":"obsidian-document","enabled":true,"unavailable":false,"alwaysEnabled":true,"allowFoldingLists":true,"allowFoldingHeadings":true,"documentWidth":"40em","info_allowFoldingLists":{"show":true,"name":"","description":"Whether or not to allow lists to be folded","placeholder":""},"info_allowFoldingHeadings":{"show":true,"name":"","description":"Whether or not to allow headings to be folded","placeholder":""},"info_documentWidth":{"show":true,"name":"","description":"The width of the document","placeholder":""}},"rss":{"featureId":"obsidian-document","enabled":false,"unavailable":false,"alwaysEnabled":false,"siteUrl":"","siteName":"KikyPage","authorName":"","info_siteUrl":{"show":true,"name":"","description":"The url that this site will be hosted at","placeholder":"https://example.com/mysite"},"info_siteName":{"show":true,"name":"","description":"The name of the vault / exported site","placeholder":""},"info_authorName":{"show":true,"name":"","description":"The name of the author of the site","placeholder":""}}},"modifiedTime":1740054743210,"siteName":"KikyPage","vaultName":"KikyPage","exportRoot":"","baseURL":"","pluginVersion":"1.9.0-3b","themeName":"","bodyClasses":"publish css-settings-manager show-inline-title show-ribbon is-focused","hasFavicon":true}